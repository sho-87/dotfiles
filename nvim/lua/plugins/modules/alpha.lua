local M = {
	"goolord/alpha-nvim",
	enabled = true,
	dependencies = { "nvim-tree/nvim-web-devicons" },
	event = "VimEnter",
}

function M.config()
	local theme = require("alpha.themes.theta")
	local config = theme.config

	-- Header
	local cool = {
		type = "text",
		val = {
			[[    РќѕРќѕРќѕРЋЌ   РќѕРќѕРќѕРЋЌ РќѕРќѕРќѕРќѕРќѕРЋЌ РќѕРќѕРЋЌ  РќѕРќѕРЋЌРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌ   ]],
			[[    РќѕРќѕРќѕРќѕРЋЌ РќѕРќѕРќѕРќѕРЋЉРќѕРќѕРЋћРЋљРЋљРќѕРќѕРЋЌРќѕРќѕРЋЉ РќѕРќѕРЋћРЋЮРќѕРќѕРЋћРЋљРЋљРЋљРЋљРЋЮ   ]],
			[[    РќѕРќѕРЋћРќѕРќѕРќѕРќѕРЋћРќѕРќѕРЋЉРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЉРќѕРќѕРќѕРќѕРќѕРЋћРЋЮ РќѕРќѕРќѕРќѕРќѕРЋЌ     ]],
			[[    РќѕРќѕРЋЉРЋџРќѕРќѕРЋћРЋЮРќѕРќѕРЋЉРќѕРќѕРЋћРЋљРЋљРќѕРќѕРЋЉРќѕРќѕРЋћРЋљРќѕРќѕРЋЌ РќѕРќѕРЋћРЋљРЋљРЋЮ     ]],
			[[    РќѕРќѕРЋЉ РЋџРЋљРЋЮ РќѕРќѕРЋЉРќѕРќѕРЋЉ  РќѕРќѕРЋЉРќѕРќѕРЋЉ  РќѕРќѕРЋЌРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌ   ]],
			[[    РЋџРЋљРЋЮ     РЋџРЋљРЋЮРЋџРЋљРЋЮ  РЋџРЋљРЋЮРЋџРЋљРЋЮ  РЋџРЋљРЋЮРЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ   ]],
			[[      РќѕРќѕРќѕРќѕРќѕРќѕРЋЌ РќѕРќѕРќѕРќѕРќѕРќѕРЋЌ  РќѕРќѕРќѕРќѕРќѕРќѕРЋЌ РќѕРќѕРЋЌ        ]],
			[[     РќѕРќѕРЋћРЋљРЋљРЋљРЋљРЋЮРќѕРќѕРЋћРЋљРЋљРЋљРќѕРќѕРЋЌРќѕРќѕРЋћРЋљРЋљРЋљРќѕРќѕРЋЌРќѕРќѕРЋЉ        ]],
			[[     РќѕРќѕРЋЉ     РќѕРќѕРЋЉ   РќѕРќѕРЋЉРќѕРќѕРЋЉ   РќѕРќѕРЋЉРќѕРќѕРЋЉ        ]],
			[[     РќѕРќѕРЋЉ     РќѕРќѕРЋЉ   РќѕРќѕРЋЉРќѕРќѕРЋЉ   РќѕРќѕРЋЉРќѕРќѕРЋЉ        ]],
			[[     РЋџРќѕРќѕРќѕРќѕРќѕРќѕРЋЌРЋџРќѕРќѕРќѕРќѕРќѕРќѕРЋћРЋЮРЋџРќѕРќѕРќѕРќѕРќѕРќѕРЋћРЋЮРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌ   ]],
			[[      РЋџРЋљРЋљРЋљРЋљРЋљРЋЮ РЋџРЋљРЋљРЋљРЋљРЋљРЋЮ  РЋџРЋљРЋљРЋљРЋљРЋљРЋЮ РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ   ]],
			[[РќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌРќѕРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌРќѕРќѕРЋЌ   РќѕРќѕРЋЌРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌРќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌ]],
			[[РќѕРќѕРЋћРЋљРЋљРЋљРЋљРЋЮРЋџРЋљРЋљРќѕРќѕРЋћРЋљРЋљРЋЮРќѕРќѕРЋЉ   РќѕРќѕРЋЉРќѕРќѕРЋћРЋљРЋљРЋљРЋљРЋЮРќѕРќѕРЋћРЋљРЋљРЋљРЋљРЋЮ]],
			[[РќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЌ   РќѕРќѕРЋЉ   РќѕРќѕРЋЉ   РќѕРќѕРЋЉРќѕРќѕРќѕРќѕРќѕРЋЌ  РќѕРќѕРќѕРќѕРќѕРЋЌ  ]],
			[[РЋџРЋљРЋљРЋљРЋљРќѕРќѕРЋЉ   РќѕРќѕРЋЉ   РќѕРќѕРЋЉ   РќѕРќѕРЋЉРќѕРќѕРЋћРЋљРЋљРЋЮ  РќѕРќѕРЋћРЋљРЋљРЋЮ  ]],
			[[РќѕРќѕРќѕРќѕРќѕРќѕРќѕРЋЉ   РќѕРќѕРЋЉ   РЋџРќѕРќѕРќѕРќѕРќѕРќѕРЋћРЋЮРќѕРќѕРЋЉ     РќѕРќѕРЋЉ     ]],
			[[РЋџРЋљРЋљРЋљРЋљРЋљРЋљРЋЮ   РЋџРЋљРЋЮ    РЋџРЋљРЋљРЋљРЋљРЋљРЋЮ РЋџРЋљРЋЮ     РЋџРЋљРЋЮ     ]],
		},
		opts = {
			position = "center",
			hl = "Boolean",
		},
	}

	local panda = {
		type = "text",
		val = {
			[[       РађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРБђРБђРБцРБђРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРБђРБаРБђРБђРАђРађРађРађРађРађРађРађРађРађРађРађРађРађРађ        ]],
			[[       РађРађРађРађРађРађРађРађРађРађРађРађРБаРБЙРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБєРађРбђРБђРБђРБцРБцРБцРБдРБдРБцРБцРБёРБђРБђРађРбаРБЙРБ┐РБ┐РБ┐РБ┐РБ┐РБиРБдРАђРађРађРађРађРађРађРађРађРађРађРађ    ]],
			[[       РађРађРађРађРађРађРађРађРађРађРађРБ░РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РА┐РаЪРаЏРаЅРађРађРађРађРађРађРађРађРађРаѕРаЎРаЏРа┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБиРађРађРађРађРађРађРађРађРађРађ      ]],
			[[       РађРађРађРађРађРађРађРађРађРађРађРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РаЪРаЂРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаѕРаЎРб┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РАЄРађРађРађРађРађРађРађРађРађ       ]],
			[[      Рађ РађРађРађРађРађРађРађРађРађРађРб╗РБ┐РБ┐РБ┐РБ┐РАЪРаЂРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРаЎРБ┐РБ┐РБ┐РБ┐РБ┐РаЂРађРађРађРађРађРађРађРађРађРађ       ]],
			[[      РађРађ РађРађРађРађРађРађРађРађРађРаѕРа╗Рб┐РБ┐РаЪРађРађРађРађРађРБђРБцРБцРБцРАђРађРађРађРађРађРбђРБцРБцРБцРБёРАђРађРађРађРађРаўРБ┐РА┐Ра┐РаЃРађРађРађРађРађРађРађРађРађРађРађ      ]],
			[[      РађРађРађ РађРађРађРађРађРађРађРађРађРађРбаРАЪРађРађРађРађРБаРБЙРБ┐РБ┐РБЪРБ┐РАЄРађРађРађРађРађРбИРБ┐РБ┐РБ╗РБ┐РБ┐РБдРађРађРађРађРаИРБДРађРађРађРађРађРађРађРађРађРађРађРађРађ       ]],
			[[      РађРађРађРађ РађРађРађРађРађРађРађРађРађРБ╝РаЂРађРађРађРађРБ┐РБ┐РБ┐РБ┐РБ┐РАЪРбаРБХРБЙРБ┐РБ┐РБиРБцРбйРБ┐РБ┐РБ┐РБ┐РБ┐РАЄРађРађРБђРБцРБ┐РБиРБ┤РБХРБдРБђРАђРађРађРађРађРађРађРађ     ]],
			[[      РађРађРађРађРађ РађРађРађРбђРБаРБцРБцРБаРБЄРађРађРађРађРађРБ┐РБ┐РБ┐РБ┐РБ┐РађРаўРа╗РБ┐РБ┐РБ┐РА┐РаІРађРб╣РБ┐РБ┐РБ┐РБ┐РАЄРађРБ┐РБ┐РБ┐РАЈРб╣РБ┐РаЅРБ┐РБ┐РБ┐РБиРађРађРађРађРађРађ    ]],
			[[      РађРађРађРађ РађРађРбаРБЙРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБХРБёРађРађРа╣РБ┐РБ┐Ра┐РаІРађРбцРБђРбђРБ╝РАёРађРБаРађРаѕРа╗РБ┐РБ┐РаЪРађРбИРБ┐РБЄРБйРБ┐Ра┐Ра┐Ра┐РБ┐РБЁРБйРБ┐РАЄРађРађРађРађРађ   ]],
			[[      РађРађРађРађРађ РађРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБєРађРађРађРађРађРађРађРађРаѕРаЅРаЂРаЅРаЅРађРађРађРађРађРађРађРађРаѕРБ┐РБ┐РБЪРаЂРађРађРађРаѕРБ┐РБ┐РБ┐РАЄРађРађРађРађ      ]],
			[[       РаЏРаЏРаЏРаЏРаЏРаЏРБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РБ┐РаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏРаЏ]],
			[[       РађРађРађРађРађРађРаўРаЏРа╗Рб┐РБ┐РБ┐РБ┐РБ┐РБ┐РаЪРаЏРаЂРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ       ]],
			[[       РађРађРађРађРађРађРађРађРађРађРаѕРађРаѕРаЅРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађРађ         ]],
		},
		opts = {
			position = "center",
			hl = "Character",
		},
	}

	local function random_header(headers)
		math.randomseed(os.time())
		return headers[math.random(#headers)]
	end

	-- Links / buttons
	local dashboard = require("alpha.themes.dashboard")
	local links = {
		type = "group",
		val = {
			{ type = "text", val = "Tools", opts = { hl = "SpecialComment", position = "center" } },
			dashboard.button("l", "­Ъњц Lazy", "<cmd>Lazy<CR>"),
			dashboard.button("m", "­ЪД▒ Mason", "<cmd>Mason<CR>"),
		},
		position = "center",
	}

	-- MRU
	local function get_mru(num)
		local tbl = {
			{ type = "text", val = "Recent Files", opts = { hl = "SpecialComment", position = "center" } },
		}

		local mru_list = theme.mru(1, "", num)

		for i, file in ipairs(mru_list.val) do
			table.insert(tbl, file)
		end

		return { type = "group", val = tbl, opts = {} }
	end

	-- Projects
	local function get_projects(num)
		local items_number = num
		local alphabet = "abcdefghijknopqrstuvwxyz"

		local project_list = require("telescope._extensions.project.utils").get_projects("recent")

		local tbl = {
			{ type = "text", val = "Projects", opts = { hl = "SpecialComment", position = "center" } },
		}

		for i, project in ipairs(project_list) do
			if i > items_number then
				break
			end
			local path_escape = project.path:gsub("\\", "\\\\")
			print(path_escape)
			local file_button_el = dashboard.button(
				string.sub(alphabet, i, i),
				project.title,
				"<cmd>lua require('telescope.builtin').find_files( { cwd = '" .. path_escape .. "' }) <cr>"
			)
			table.insert(tbl, file_button_el)
		end
		return {
			type = "group",
			val = tbl,
			opts = {},
		}
	end

	-- Layout
	config.layout[2] = random_header({ cool, panda })
	config.layout[4] = links
	config.layout[5] = { type = "padding", val = 1 }
	config.layout[6] = get_projects(5)
	config.layout[7] = { type = "padding", val = 1 }
	config.layout[8] = get_mru(9)

	require("alpha").setup(config)

	local alpha_group = vim.api.nvim_create_augroup("alpha", { clear = true })
	vim.api.nvim_create_autocmd("User", {
		group = alpha_group,
		pattern = "AlphaReady",
		command = "set laststatus=0 | set showtabline=0",
	})
	vim.api.nvim_create_autocmd("User", {
		group = alpha_group,
		pattern = "AlphaClosed",
		command = "set laststatus=3 | set showtabline=2",
	})
end

return M
